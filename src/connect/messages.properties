connect.user=User
connect.arguments=args
connect.class=className
connect.exchange=webapp.exchange
connect.method=methodName
connect.name=name
connect.null=null
connect.value=value
connect.true=true
connect.false=false
connect.type.List=List
connect.type.String=String
connect.type.lList=list
connect.type.sString=string
connect.return.value="returnValue":
connect.Exception=Exception :: 
connect.Filter.app=/app/
connect.Filter.css=/app/css/
connect.Filter.css/=/css/
connect.Filter.fonts=/app/fonts/
connect.Filter.fonts/=/fonts/
connect.Filter.home=Home/
connect.Filter.images=/app/images/
connect.Filter.images/=/images/
connect.Filter.js=/app/js/
connect.Filter.js/=/js/
connect.Filter.json=/app/json/
connect.Filter.json/=/json/
connect.Filter.root=/
connect.IllegalArgumentsException={"ServerCallException":"Illegal Arguments"}
connect.InvalidArgumentsException={"ServerCallException":"InvalidArguments"}
connect.MethodInvokeException={"ServerCallException":"ErrorWhileInvokingMethod"}
connect.MethodNotFoundException={"ServerCallException":"MethodNotFound"}
connect.PackingReturnValueException={"ServerCallException":"ErrorWhilePackingReturnValue"}
connect.ServerCallException=Exception in connect.Server.call :: 
connect.SessionExpiredException={"ServerCallException":"SessionExpired"}
connect.SQLException=SQLExceptionWhileFetchingDataFromDatabase :: 
connect.SQLExceptionDisplay={"ServerCallException":"SQLExceptionWhileFetchingDataFromDatabase"}
connect.UnknownException={"ServerCallException":"Unknown"}

